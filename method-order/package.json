{
  "name": "method-order",
  "displayName": "RenanLacerda - Ordem de Métodos",
  "description": "Garante que os métodos em classes estejam em uma ordem lógica baseada em chamadas.",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": ""
  },
  "engines": {
    "vscode": "^1.60.0"
  },
  "icon": "icon.png",
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:typescriptreact",
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:csharp"
  ],
  "main": "./extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Method Order Configuration",
      "properties": {
        "methodOrder.prefixOrder": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
             // ===== Lifecycle / Framework Hooks =====
        "constructor",
        "Awake",
        "ngOnInit",
        "ngAfterViewInit",
        // ===== Creation / Factory =====
        "Create",
        "Build",
        "Generate",
        "Post",
        // ===== Instantiation / Cloning =====
        "Instantiate",
        "Clone",
        // ===== Preparation / Setup =====
        "Initialize",
        "Prepare",
        "Setup",
        // ===== Dependency Injection =====
        "Inject",
        "Configure",
        // ===== Linking / Association =====
        "Attach",
        "Detach",
        "Bind",
        "Unbind",
        "Link",
        "Unlink",
        "Associate",
        "Disassociate",
        // ===== State Application / Mutators =====
        "Set", // assign a new value
        "Apply", // apply changes
        "Assign",
        "Mark",
        "Edit",
        "Enable",
        "Disable",
        "Toggle",
        // ===== Retrieval / Queries =====
        "Get",
        "Find",
        "Select",
        "Count",
        // ===== Computation / Parsing / Formatting =====
        "Calculate",
        "Min",
        "Max",
        "Clamp",
        "Limit",
        "Parse",
        "Format",
        "Resolve",
        // ===== Conversion =====
        "Convert",
        "To",
        "From",
        // ===== Collection Transformations =====
        "Map",
        "Filter",
        "Sort",
        "Concat",
        // ===== Validation / Guards =====
        "Is",
        "Has",
        "Exists",
        "Valid",
        "Invalid",
        "Can",
        "can",
        "Check",
        "Validate",
        "Verify",
        "Authorize",
        "Authenticate",
        "Approve",
        // ===== Listening / Subscribing =====
        "On",
        "Listen",
        "Subscribe",
        "Await",
        "Unsubscribe",
        // ===== Processing / Handling =====
        "Handle",
        // ===== Interception / Middleware =====
        "Intercept",
        "intercept",
        // ===== Emitting / Triggering =====
        "Emit",
        "Notify",
        "Trigger",
        "Dispatch",
        "Fire",
        "Invoke",
        // ===== Publishing / Broadcasting =====
        "Publish",
        "Broadcast",
        // ===== Communication / HTTP / Routing =====
        "Request",
        "Fetch",
        "Send",
        "Put",
        "Download",
        "Connect",
        "Navigate",
        "Redirect",
        "Disconnect",
        // ===== Crypto / Security =====
        "Encrypt",
        "Decrypt",
        // ===== Execution / Controls =====
        "Start",
        "Begin",
        "Run",
        "Execute",
        "Launch",
        // ===== Frame Update / Game Loop =====
        "FixedUpdate",
        "LateUpdate",
        "Update",
        "Tick",
        "Step",
        "FrameUpdate",
        // ===== Animation / Transitions =====
        "Animate",
        "Move",
        "Rotate",
        "Scale",
        "Fade",
        "Transition",
        // ===== UI / View =====
        "Show",
        "Hide",
        "Open",
        "Close",
        "Dismiss",
        "Render",
        "Display",
        "Draw",
        "Refresh",
        // ===== Persistence / Storage =====
        "Save",
        "Export",
        "Store",
        // ===== Database Operations =====
        "Insert",
        "Delete",
        "Commit",
        "Rollback",
        // ===== Teardown / Cleanup =====
        "Stop",
        "Cancel",
        "Clear",
        "Remove",
        "Unload",
        "Reset",
        "Restart",
        // ===== Logging / Monitoring =====
        "Log",
        "Info",
        "Debug",
        "Success",
        "Warn",
        "Error",
        "Fail",
        "Trace",
        "Process"
            "__ANY__"
          ],
          "description": "Lista ordenada dos prefixos de métodos. Use '__ANY__' para indicar qualquer outro prefixo."
        },
        "methodOrder.enforceCallOrder": {
          "type": "boolean",
          "default": true,
          "description": "Métodos chamados devem vir logo abaixo de quem os chama."
        }
      }
    }
  }
}
